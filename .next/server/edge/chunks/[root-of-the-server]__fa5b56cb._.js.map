{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/xata.ts"],"sourcesContent":["import { buildClient } from \"@xata.io/client\";\r\nimport type { BaseClientOptions } from \"@xata.io/client\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\r\nexport type DatabaseSchema = {};\r\n\r\nconst DatabaseClient = buildClient();\r\n\r\nconst defaultOptions = {\r\n  databaseURL:\r\n    \"https://Arpreet-Mahala-s-workspace-sm4oj2.eu-central-1.xata.sh/db/arp-SnapCast:main\",\r\n  apiKey: process.env.XATA_API_KEY,\r\n  branch: \"main\",\r\n};\r\n\r\nexport class XataClient extends DatabaseClient<DatabaseSchema> {\r\n  constructor(options?: BaseClientOptions) {\r\n    super({ ...defaultOptions, ...options });\r\n  }\r\n}\r\n\r\nlet instance: XataClient | undefined = undefined;\r\n\r\nexport const getXataClient = () => {\r\n  if (instance) return instance;\r\n\r\n  instance = new XataClient();\r\n  return instance;\r\n};"],"names":[],"mappings":";;;;AAAA;;AAMA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,cAAW,AAAD;AAEjC,MAAM,iBAAiB;IACrB,aACE;IACF,QAAQ,QAAQ,GAAG,CAAC,YAAY;IAChC,QAAQ;AACV;AAEO,MAAM,mBAAmB;IAC9B,YAAY,OAA2B,CAAE;QACvC,KAAK,CAAC;YAAE,GAAG,cAAc;YAAE,GAAG,OAAO;QAAC;IACxC;AACF;AAEA,IAAI,WAAmC;AAEhC,MAAM,gBAAgB;IAC3B,IAAI,UAAU,OAAO;IAErB,WAAW,IAAI;IACf,OAAO;AACT"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/drizzle/db.ts"],"sourcesContent":["import { drizzle } from \"drizzle-orm/xata-http\";\r\nimport { getXataClient } from \"../xata\";\r\nconst xata = getXataClient();\r\nexport const db = drizzle(xata);"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,OAAO,CAAA,GAAA,4GAAA,CAAA,gBAAa,AAAD;AAClB,MAAM,KAAK,CAAA,GAAA,gKAAA,CAAA,UAAO,AAAD,EAAE"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/drizzle/schema.ts"],"sourcesContent":["import {\r\n  pgTable,\r\n  text,\r\n  timestamp,\r\n  boolean,\r\n  uuid,\r\n  integer,\r\n  //jsonb,\r\n} from \"drizzle-orm/pg-core\";\r\n\r\nexport const user = pgTable(\"user\", {\r\n  id: text(\"id\").primaryKey(),\r\n  name: text(\"name\").notNull(),\r\n  email: text(\"email\").notNull().unique(),\r\n  emailVerified: boolean(\"email_verified\").notNull(),\r\n  image: text(\"image\"),\r\n  createdAt: timestamp(\"created_at\").notNull(),\r\n  updatedAt: timestamp(\"updated_at\").notNull(),\r\n});\r\n\r\nexport const session = pgTable(\"session\", {\r\n  id: text(\"id\").primaryKey(),\r\n  expiresAt: timestamp(\"expires_at\").notNull(),\r\n  token: text(\"token\").notNull().unique(),\r\n  createdAt: timestamp(\"created_at\").notNull(),\r\n  updatedAt: timestamp(\"updated_at\").notNull(),\r\n  ipAddress: text(\"ip_address\"),\r\n  userAgent: text(\"user_agent\"),\r\n  userId: text(\"user_id\")\r\n    .notNull()\r\n    .references(() => user.id, { onDelete: \"cascade\" }),\r\n});\r\n\r\nexport const account = pgTable(\"account\", {\r\n  id: text(\"id\").primaryKey(),\r\n  accountId: text(\"account_id\").notNull(),\r\n  providerId: text(\"provider_id\").notNull(),\r\n  userId: text(\"user_id\")\r\n    .notNull()\r\n    .references(() => user.id, { onDelete: \"cascade\" }),\r\n  accessToken: text(\"access_token\"),\r\n  refreshToken: text(\"refresh_token\"),\r\n  idToken: text(\"id_token\"),\r\n  accessTokenExpiresAt: timestamp(\"access_token_expires_at\"),\r\n  refreshTokenExpiresAt: timestamp(\"refresh_token_expires_at\"),\r\n  scope: text(\"scope\"),\r\n  password: text(\"password\"),\r\n  createdAt: timestamp(\"created_at\").notNull(),\r\n  updatedAt: timestamp(\"updated_at\").notNull(),\r\n});\r\n\r\nexport const verification = pgTable(\"verification\", {\r\n  id: text(\"id\").primaryKey(),\r\n  identifier: text(\"identifier\").notNull(),\r\n  value: text(\"value\").notNull(),\r\n  expiresAt: timestamp(\"expires_at\").notNull(),\r\n  createdAt: timestamp(\"created_at\"),\r\n  updatedAt: timestamp(\"updated_at\"),\r\n});\r\n\r\nexport const videos = pgTable(\"videos\", {\r\n  id: uuid(\"id\").primaryKey().defaultRandom().unique(),\r\n  title: text(\"title\").notNull(),\r\n  description: text(\"description\").notNull(),\r\n  videoUrl: text(\"video_url\").notNull(),\r\n  videoId: text(\"video_id\").notNull(),\r\n  thumbnailUrl: text(\"thumbnail_url\").notNull(),\r\n  visibility: text(\"visibility\").$type<\"public\" | \"private\">().notNull(),\r\n  userId: text(\"user_id\")\r\n    .notNull()\r\n    .references(() => user.id, { onDelete: \"cascade\" }),\r\n  views: integer(\"views\").notNull().default(0),\r\n  duration: integer(\"duration\"),\r\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\r\n  updatedAt: timestamp(\"updated_at\").notNull().defaultNow(),\r\n});\r\n\r\nexport const schema = {\r\n  user,\r\n  session,\r\n  account,\r\n  verification,\r\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/auth.ts"],"sourcesContent":["import { db } from \"@/drizzle/db\";\r\nimport { schema } from \"@/drizzle/schema\";\r\nimport { betterAuth } from \"better-auth\";\r\nimport { drizzleAdapter } from \"better-auth/adapters/drizzle\";\r\nimport { nextCookies } from \"better-auth/next-js\";\r\n\r\nexport const auth = betterAuth({\r\n  database: drizzleAdapter(db, {\r\n    provider: \"pg\",\r\n    schema: schema,\r\n  }),\r\n  socialProviders: {\r\n    google: {\r\n      clientId: process.env.GOOGLE_CLIENT_ID!,\r\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\r\n    },\r\n  },\r\n  plugins: [nextCookies()],\r\n  baseURL: process.env.NEXT_PUBLIC_BASE_URL,\r\n});"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;AAEO,MAAM,OAAO,CAAA,GAAA,wKAAA,CAAA,aAAU,AAAD,EAAE;IAC7B,UAAU,CAAA,GAAA,0LAAA,CAAA,iBAAc,AAAD,EAAE,qHAAA,CAAA,KAAE,EAAE;QAC3B,UAAU;QACV,QAAQ,yHAAA,CAAA,SAAM;IAChB;IACA,iBAAiB;QACf,QAAQ;YACN,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;IACF;IACA,SAAS;QAAC,CAAA,GAAA,6KAAA,CAAA,cAAW,AAAD;KAAI;IACxB,OAAO;AACT"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/constants/index.ts"],"sourcesContent":["export const MAX_VIDEO_SIZE = 500 * 1024 * 1024;\nexport const MAX_THUMBNAIL_SIZE = 10 * 1024 * 1024;\n\nexport const BUNNY = {\n  STREAM_BASE_URL: \"https://video.bunnycdn.com/library\",\n  STORAGE_BASE_URL: \"storage.bunnycdn.com/arpsnapcast\",\n  CDN_URL: \"https://arp-snap-cast.b-cdn.net\",\n  EMBED_URL: \"https://iframe.mediadelivery.net/embed\",\n  TRANSCRIPT_URL: \"vz-8e236ac9-5ee.b-cdn.net\",\n};\n\nexport const emojis = [\"üòÇ\", \"üòç\", \"üëç\"];\n\nexport const filterOptions = [\n  \"Most Viewed\",\n  \"Most Recent\",\n  \"Oldest First\",\n  \"Least Viewed\",\n];\n\nexport const visibilities: Visibility[] = [\"public\", \"private\"];\n\nexport const ICONS = {\n  record: \"/assets/icons/record.svg\",\n  close: \"/assets/icons/close.svg\",\n  upload: \"/assets/icons/upload.svg\",\n};\n\nexport const initialVideoState = {\n  isLoaded: false,\n  hasIncrementedView: false,\n  isProcessing: true,\n  processingProgress: 0,\n};\n\nexport const infos = [\"transcript\", \"metadata\"];\n\nexport const DEFAULT_VIDEO_CONFIG = {\n  width: { ideal: 1920 },\n  height: { ideal: 1080 },\n  frameRate: { ideal: 30 },\n};\n\nexport const DEFAULT_RECORDING_CONFIG = {\n  mimeType: \"video/webm;codecs=vp9,opus\",\n  audioBitsPerSecond: 128000,\n  videoBitsPerSecond: 2500000,\n};"],"names":[],"mappings":";;;;;;;;;;;;;AAAO,MAAM,iBAAiB,MAAM,OAAO;AACpC,MAAM,qBAAqB,KAAK,OAAO;AAEvC,MAAM,QAAQ;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,SAAS;IACT,WAAW;IACX,gBAAgB;AAClB;AAEO,MAAM,SAAS;IAAC;IAAM;IAAM;CAAK;AAEjC,MAAM,gBAAgB;IAC3B;IACA;IACA;IACA;CACD;AAEM,MAAM,eAA6B;IAAC;IAAU;CAAU;AAExD,MAAM,QAAQ;IACnB,QAAQ;IACR,OAAO;IACP,QAAQ;AACV;AAEO,MAAM,oBAAoB;IAC/B,UAAU;IACV,oBAAoB;IACpB,cAAc;IACd,oBAAoB;AACtB;AAEO,MAAM,QAAQ;IAAC;IAAc;CAAW;AAExC,MAAM,uBAAuB;IAClC,OAAO;QAAE,OAAO;IAAK;IACrB,QAAQ;QAAE,OAAO;IAAK;IACtB,WAAW;QAAE,OAAO;IAAG;AACzB;AAEO,MAAM,2BAA2B;IACtC,UAAU;IACV,oBAAoB;IACpB,oBAAoB;AACtB"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\nimport { ilike, sql } from \"drizzle-orm\";\r\nimport { videos } from \"@/drizzle/schema\";\r\nimport { DEFAULT_VIDEO_CONFIG, DEFAULT_RECORDING_CONFIG } from \"@/constants\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport const updateURLParams = (\r\n  currentParams: URLSearchParams,\r\n  updates: Record<string, string | null | undefined>,\r\n  basePath: string = \"/\"\r\n): string => {\r\n  const params = new URLSearchParams(currentParams.toString());\r\n\r\n  // Process each parameter update\r\n  Object.entries(updates).forEach(([name, value]) => {\r\n    if (value) {\r\n      params.set(name, value);\r\n    } else {\r\n      params.delete(name);\r\n    }\r\n  });\r\n\r\n  return `${basePath}?${params.toString()}`;\r\n};\r\n\r\n// Get env helper function\r\nexport const getEnv = (key: string): string => {\r\n  const value = process.env[key];\r\n  if (!value) throw new Error(`Missing required env: ${key}`);\r\n  return value;\r\n};\r\n\r\n// API fetch helper with required Bunny CDN options\r\nexport const apiFetch = async <T = Record<string, unknown>>(\r\n  url: string,\r\n  options: Omit<ApiFetchOptions, \"bunnyType\"> & {\r\n    bunnyType: \"stream\" | \"storage\";\r\n  }\r\n): Promise<T> => {\r\n  const {\r\n    method = \"GET\",\r\n    headers = {},\r\n    body,\r\n    expectJson = true,\r\n    bunnyType,\r\n  } = options;\r\n\r\n  const key = getEnv(\r\n    bunnyType === \"stream\"\r\n      ? \"BUNNY_STREAM_ACCESS_KEY\"\r\n      : \"BUNNY_STORAGE_ACCESS_KEY\"\r\n  );\r\n\r\n  const requestHeaders = {\r\n    ...headers,\r\n    AccessKey: key,\r\n    ...(bunnyType === \"stream\" && {\r\n      accept: \"application/json\",\r\n      ...(body && { \"content-type\": \"application/json\" }),\r\n    }),\r\n  };\r\n\r\n  const requestOptions: RequestInit = {\r\n    method,\r\n    headers: requestHeaders,\r\n    ...(body && { body: JSON.stringify(body) }),\r\n  };\r\n\r\n  const response = await fetch(url, requestOptions);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`API error ${response.text()}`);\r\n  }\r\n\r\n  if (method === \"DELETE\" || !expectJson) {\r\n    return true as T;\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\n// Higher order function to handle errors\r\nexport const withErrorHandling = <T, A extends unknown[]>(\r\n  fn: (...args: A) => Promise<T>\r\n) => {\r\n  return async (...args: A): Promise<T> => {\r\n    try {\r\n      const result = await fn(...args);\r\n      return result;\r\n    } catch (error) {\r\n      const errorMessage =\r\n        error instanceof Error ? error.message : \"Unknown error occurred\";\r\n      return errorMessage as unknown as T;\r\n    }\r\n  };\r\n};\r\n\r\nexport const getOrderByClause = (filter?: string) => {\r\n  switch (filter) {\r\n    case \"Most Viewed\":\r\n      return sql`${videos.views} DESC`;\r\n    case \"Least Viewed\":\r\n      return sql`${videos.views} ASC`;\r\n    case \"Oldest First\":\r\n      return sql`${videos.createdAt} ASC`;\r\n    case \"Most Recent\":\r\n    default:\r\n      return sql`${videos.createdAt} DESC`;\r\n  }\r\n};\r\n\r\nexport const generatePagination = (currentPage: number, totalPages: number) => {\r\n  if (totalPages <= 7) {\r\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\r\n  }\r\n  if (currentPage <= 3) {\r\n    return [1, 2, 3, 4, 5, \"...\", totalPages];\r\n  }\r\n  if (currentPage >= totalPages - 2) {\r\n    return [\r\n      1,\r\n      \"...\",\r\n      totalPages - 4,\r\n      totalPages - 3,\r\n      totalPages - 2,\r\n      totalPages - 1,\r\n      totalPages,\r\n    ];\r\n  }\r\n  return [\r\n    1,\r\n    \"...\",\r\n    currentPage - 1,\r\n    currentPage,\r\n    currentPage + 1,\r\n    \"...\",\r\n    totalPages,\r\n  ];\r\n};\r\n\r\nexport const getMediaStreams = async (\r\n  withMic: boolean\r\n): Promise<MediaStreams> => {\r\n  const displayStream = await navigator.mediaDevices.getDisplayMedia({\r\n    video: DEFAULT_VIDEO_CONFIG,\r\n    audio: true,\r\n  });\r\n\r\n  const hasDisplayAudio = displayStream.getAudioTracks().length > 0;\r\n  let micStream: MediaStream | null = null;\r\n\r\n  if (withMic) {\r\n    micStream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    micStream\r\n      .getAudioTracks()\r\n      .forEach((track: MediaStreamTrack) => (track.enabled = true));\r\n  }\r\n\r\n  return { displayStream, micStream, hasDisplayAudio };\r\n};\r\n\r\nexport const createAudioMixer = (\r\n  ctx: AudioContext,\r\n  displayStream: MediaStream,\r\n  micStream: MediaStream | null,\r\n  hasDisplayAudio: boolean\r\n) => {\r\n  if (!hasDisplayAudio && !micStream) return null;\r\n\r\n  const destination = ctx.createMediaStreamDestination();\r\n  const mix = (stream: MediaStream, gainValue: number) => {\r\n    const source = ctx.createMediaStreamSource(stream);\r\n    const gain = ctx.createGain();\r\n    gain.gain.value = gainValue;\r\n    source.connect(gain).connect(destination);\r\n  };\r\n\r\n  if (hasDisplayAudio) mix(displayStream, 0.7);\r\n  if (micStream) mix(micStream, 1.5);\r\n\r\n  return destination;\r\n};\r\n\r\nexport const setupMediaRecorder = (stream: MediaStream) => {\r\n  try {\r\n    return new MediaRecorder(stream, DEFAULT_RECORDING_CONFIG);\r\n  } catch {\r\n    return new MediaRecorder(stream);\r\n  }\r\n};\r\n\r\nexport const getVideoDuration = (url: string): Promise<number | null> =>\r\n  new Promise((resolve) => {\r\n    const video = document.createElement(\"video\");\r\n    video.preload = \"metadata\";\r\n    video.onloadedmetadata = () => {\r\n      const duration =\r\n        isFinite(video.duration) && video.duration > 0\r\n          ? Math.round(video.duration)\r\n          : null;\r\n      URL.revokeObjectURL(video.src);\r\n      resolve(duration);\r\n    };\r\n    video.onerror = () => {\r\n      URL.revokeObjectURL(video.src);\r\n      resolve(null);\r\n    };\r\n    video.src = url;\r\n  });\r\n\r\nexport const setupRecording = (\r\n  stream: MediaStream,\r\n  handlers: RecordingHandlers\r\n): MediaRecorder => {\r\n  const recorder = new MediaRecorder(stream, DEFAULT_RECORDING_CONFIG);\r\n  recorder.ondataavailable = handlers.onDataAvailable;\r\n  recorder.onstop = handlers.onStop;\r\n  return recorder;\r\n};\r\n\r\nexport const cleanupRecording = (\r\n  recorder: MediaRecorder | null,\r\n  stream: MediaStream | null,\r\n  originalStreams: MediaStream[] = []\r\n) => {\r\n  if (recorder?.state !== \"inactive\") {\r\n    recorder?.stop();\r\n  }\r\n\r\n  stream?.getTracks().forEach((track: MediaStreamTrack) => track.stop());\r\n  originalStreams.forEach((s) =>\r\n    s.getTracks().forEach((track: MediaStreamTrack) => track.stop())\r\n  );\r\n};\r\n\r\nexport const createRecordingBlob = (\r\n  chunks: Blob[]\r\n): { blob: Blob; url: string } => {\r\n  const blob = new Blob(chunks, { type: \"video/webm\" });\r\n  const url = URL.createObjectURL(blob);\r\n  return { blob, url };\r\n};\r\n\r\nexport const calculateRecordingDuration = (startTime: number | null): number =>\r\n  startTime ? Math.round((Date.now() - startTime) / 1000) : 0;\r\n\r\nexport function parseTranscript(transcript: string): TranscriptEntry[] {\r\n  const lines = transcript.replace(/^WEBVTT\\s*/, \"\").split(\"\\n\");\r\n  const result: TranscriptEntry[] = [];\r\n  let tempText: string[] = [];\r\n  let startTime: string | null = null;\r\n\r\n  for (const line of lines) {\r\n    const trimmedLine = line.trim();\r\n    const timeMatch = trimmedLine.match(\r\n      /(\\d{2}:\\d{2}:\\d{2})\\.\\d{3}\\s-->\\s(\\d{2}:\\d{2}:\\d{2})\\.\\d{3}/\r\n    );\r\n\r\n    if (timeMatch) {\r\n      if (tempText.length > 0 && startTime) {\r\n        result.push({ time: startTime, text: tempText.join(\" \") });\r\n        tempText = [];\r\n      }\r\n      startTime = timeMatch[1] ?? null;\r\n    } else if (trimmedLine) {\r\n      tempText.push(trimmedLine);\r\n    }\r\n\r\n    if (tempText.length >= 3 && startTime) {\r\n      result.push({ time: startTime, text: tempText.join(\" \") });\r\n      tempText = [];\r\n      startTime = null;\r\n    }\r\n  }\r\n\r\n  if (tempText.length > 0 && startTime) {\r\n    result.push({ time: startTime, text: tempText.join(\" \") });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function daysAgo(inputDate: Date): string {\r\n  const input = new Date(inputDate);\r\n  const now = new Date();\r\n\r\n  const diffTime = now.getTime() - input.getTime();\r\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n  if (diffDays <= 0) {\r\n    return \"Today\";\r\n  } else if (diffDays === 1) {\r\n    return \"1 day ago\";\r\n  } else {\r\n    return `${diffDays} days ago`;\r\n  }\r\n}\r\n\r\nexport const createIframeLink = (videoId: string) =>\r\n  `https://iframe.mediadelivery.net/embed/421422/${videoId}?autoplay=true&preload=true`;\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nexport const doesTitleMatch = (videos: any, searchQuery: string) =>\r\n  ilike(\r\n    sql`REPLACE(REPLACE(REPLACE(LOWER(${videos.title}), '-', ''), '.', ''), ' ', '')`,\r\n    `%${searchQuery.replace(/[-. ]/g, \"\").toLowerCase()}%`\r\n  );"],"names":[],"mappings":"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"}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/arcjet.ts"],"sourcesContent":["import arcjet, {\r\n  detectBot,\r\n  fixedWindow,\r\n  shield,\r\n  request,\r\n  validateEmail,\r\n  slidingWindow,\r\n  ArcjetDecision,\r\n  createMiddleware,\r\n} from \"@arcjet/next\";\r\nimport { getEnv } from \"./utils\";\r\n\r\n// Re-export the rules to simplify imports inside handlers\r\nexport {\r\n  detectBot,\r\n  fixedWindow,\r\n  shield,\r\n  request,\r\n  slidingWindow,\r\n  validateEmail,\r\n  createMiddleware,\r\n  ArcjetDecision,\r\n};\r\n\r\n// Create a base Arcjet instance for use by each handler\r\nconst aj = arcjet({\r\n  key: getEnv(\"ARCJET_API_KEY\"),\r\n  rules: [],\r\n});\r\n\r\nexport default aj;"],"names":[],"mappings":";;;AAAA;AAAA;AAUA;;;;;;;;;AAcA,wDAAwD;AACxD,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,UAAM,AAAD,EAAE;IAChB,KAAK,CAAA,GAAA,oHAAA,CAAA,SAAM,AAAD,EAAE;IACZ,OAAO,EAAE;AACX;uCAEe"}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { headers } from \"next/headers\";\r\nimport { auth } from \"@/lib/auth\";\r\nimport aj, { createMiddleware, detectBot, shield } from \"./lib/arcjet\";\r\n\r\nexport async function middleware(request: NextRequest) {\r\n  const session = await auth.api.getSession({\r\n    headers: await headers(),\r\n  });\r\n\r\n  if (!session) {\r\n    return NextResponse.redirect(new URL(\"/sign-in\", request.url));\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\nconst validate = aj\r\n  .withRule(\r\n    shield({\r\n      mode: \"LIVE\",\r\n    })\r\n  )\r\n  .withRule(\r\n    detectBot({\r\n      mode: \"LIVE\",\r\n      allow: [\"CATEGORY:SEARCH_ENGINE\", \"G00G1E_CRAWLER\"], // allow other bots if you want to.\r\n    })\r\n  );\r\n\r\nexport default createMiddleware(validate);\r\n\r\nexport const config = {\r\n  matcher: [\"/((?!api|_next/static|_next/image|favicon.ico|sign-in|assets).*)\"],\r\n};\r\n\r\n// ‚®Ø [TypeError: Body is unusable: Body has already been read]"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAEO,eAAe,WAAW,OAAoB;IACnD,MAAM,UAAU,MAAM,mHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,UAAU,CAAC;QACxC,SAAS,MAAM,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD;IACvB;IAEA,IAAI,CAAC,SAAS;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,QAAQ,GAAG;IAC9D;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AACA,MAAM,WAAW,qIAAA,CAAA,UAAE,CAChB,QAAQ,CACP,CAAA,GAAA,uJAAA,CAAA,SAAM,AAAD,EAAE;IACL,MAAM;AACR,IAED,QAAQ,CACP,CAAA,GAAA,uJAAA,CAAA,YAAS,AAAD,EAAE;IACR,MAAM;IACN,OAAO;QAAC;QAA0B;KAAiB;AACrD;uCAGW,CAAA,GAAA,iKAAA,CAAA,mBAAgB,AAAD,EAAE;AAEzB,MAAM,SAAS;IACpB,SAAS;QAAC;KAAmE;AAC/E,GAEA,8DAA8D"}}]
}